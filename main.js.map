{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACXuD;AACE;;;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,MAAM,EAAE,YAAY,EAAE,GAAE,EAAE,yJAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;KACpF;IACD;QACE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kEAAc;KACzC;IACD;QACE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO;KAChC;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;ACjB4C;;;;;;;AAS7D,MAAM,YAAY;IAEvB,6BAA6B;IAC7B,wCAAwC;IACxC,qCAAqC;IACrC,qCAAqC;IACrC,MAAM;IAEN,YAAoB,IAAiB,EAAU,IAAgB,EAAU,MAAc;QAAnE,SAAI,GAAJ,IAAI,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QA+BvF,UAAK,GAAG,wBAAwB,CAAC;IA7BjC,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAG,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;YACrD,QAAQ,EAAG,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACvC,CAAC;IACJ,CAAC;IAED,WAAW;IACX,sCAAsC;IACtC,mDAAmD;IACnD,eAAe;IACf,0BAA0B;IAC1B,kBAAkB;IAClB,0BAA0B;IAC1B,MAAM;IACN,OAAO;IACP,IAAI;IAEJ,KAAK;QACH,IAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SAChC;IACH,CAAC;;wEApCU,YAAY;0GAAZ,YAAY;QCgBzB,2EAA+D;QAC/D,iFAA2E;QAC3E,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5ByB;AAEU;AACR;AAEF;AACT;AACU;AACF;AACiB;AAChB;AACL;AACJ;AACgC;AACV;AACsB;;AA0BpF,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAHR,wDAAY;2GADb,CAAC,6DAAa,CAAC,YAXjB;YACP,oEAAa;YACb,iEAAgB;YAChB,kEAAgB;YAChB,gEAAmB;YACnB,wDAAW;YACX,kEAAS;YACT,0DAAgB;YAChB,0FAAuB;YACvB,gFAAiB;SAClB;mIAKU,SAAS,mBAtBlB,wDAAY;QACZ,kEAAc;QACd,oGAAuB;QAEvB,kFAAmB;QACnB,kEAAW,aAGX,oEAAa;QACb,iEAAgB;QAChB,kEAAgB;QAChB,gEAAmB;QACnB,wDAAW;QACX,kEAAS;QACT,0DAAgB;QAChB,0FAAuB;QACvB,gFAAiB;;;;;;;;;;;;;;;;;;;;;;ACjC+C;AACD;;;;;;;IC2CvD,8DAAyI;IAAzI,0EAAyI;IACvI,sEAA6G;IAC7G,sEAAoM;IACtM,4DAAM;;;IACN,8DAAwI;IAAxI,0EAAwI;IACtI,sEAAqX;IACvX,4DAAM;;;;IAqBV,0EAAwE;IACtE,6EAAqD;IAA7C,4VAA4C;IAClD,8DAAmH;IAAnH,0EAAmH;IACjH,sEAA6K;IAC/K,4DAAM;IACR,4DAAS;IACT,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;;;IAEA,0EAAuE;IACvE,2EAAqC;IACnC,6EAAoC;IAA5B,uUAA2B;IACjC,8DAAmH;IAAnH,0EAAmH;IACjH,sEAAwK;IAC1K,4DAAM;IACR,4DAAS;IACT,+DAAqD;IAArD,6EAAqD;IAA7C,gWAA4C;IAClD,8DAAmH;IAAnH,0EAAmH;IACjH,sEAAiG;IACnG,4DAAM;IACR,4DAAS;IAET,+DAAmI;IAAnI,uEAAmI;IACrI,4DAAO;IAEP,4DAAM;;;IAfA,0DAA6B;IAA7B,6FAA6B;;;;IAkDjC,6EAA2E;IAAnE,6UAAgC;IACxC,8DAAmH;IAAnH,0EAAmH;IACjH,sEAA2I;IAC7I,4DAAM;IACR,4DAAS;;;IACT,yEAA2C;IACzC,8DAAmH;IAAnH,0EAAmH;IACjH,sEAA2F;IAC7F,4DAAM;IACR,4DAAS;;;;IAKT,6EAAoF;IAA5E,6UAAgC;IACtC,8DAAmH;IAAnH,0EAAmH;IACjH,sEAA2I;IAC7I,4DAAM;IACR,4DAAS;;;IACT,yEAAgD;IAC9C,8DAAmH;IAAnH,0EAAmH;IACjH,sEAA2F;IAC7F,4DAAM;IACR,4DAAS;;ADjJV,MAAM,uBAAuB;IAiBlC,YAAoB,iBAAwC,EAClD,iBAAmC;QADzB,sBAAiB,GAAjB,iBAAiB,CAAuB;QAClD,sBAAiB,GAAjB,iBAAiB,CAAkB;QAjB7C,eAAU,GAAQ,EAAE,CAAC;QACrB,iBAAY,GAAQ,EAAE,CAAC;QACvB,iBAAY,GAAQ,EAAE,CAAC;QACvB,oBAAe,GAAQ,EAAE,CAAC;QAC1B,kBAAa,GAAQ,EAAE,CAAC;QACxB,qBAAgB,GAAQ,EAAE,CAAC;QAG3B,wBAAmB,GAAW,KAAK,CAAC;QACpC,SAAI,GAAY,KAAK,CAAC;QACtB,iBAAY,GAAW,iDAA+B,CAAC;QAEvD,oBAAe,GAAE,IAAI,qDAAS,CAAC;YAC7B,gBAAgB,EAAC,IAAI,uDAAW,CAAC,EAAE,EAAC,CAAC,+DAAmB,CAAC,CAAC;SAC3D,CAAC,CAAC;IAG8C,CAAC;IAElD,QAAQ;QACP,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAED,OAAO;QACJ,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAClD,CAAC,IAAQ,EAAC,EAAE;YACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC3B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,SAAS,CAC5C,CAAC,IAAQ,EAAC,EAAE;YAEV,4CAA4C;YAC5C,IAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE;gBACnG,IAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAC;oBAClG,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;oBAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;oBACrF,IAAI,CAAC,YAAY,GAAG,uDAAuD,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAC,+BAA+B,GAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,GAAC,aAAa,CAAC;iBAC5M;qBAAI;oBACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;oBACrF,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;oBACtC,IAAI,CAAC,YAAY,GAAG,uDAAuD,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAC,+BAA+B,GAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,GAAC,aAAa,CAAC;iBAC9M;aACJ;iBAAI;gBACH,IAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAC;oBAClG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;oBACrF,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;oBACtC,IAAI,CAAC,YAAY,GAAG,uDAAuD,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAC,+BAA+B,GAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,GAAC,aAAa,CAAC;iBAC5M;qBAAI;oBACH,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;oBAC/B,IAAI,CAAC,YAAY,GAAG,uCAAuC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;iBAChF;aACJ;YAGC,IAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,EAAC;gBACxG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;gBAC3F,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;gBACvC,IAAI,CAAC,eAAe,GAAG,iEAAiE,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,GAAC,+BAA+B,GAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,oBAAoB,GAAC,aAAa,CAAC;aAEjO;iBAAI;gBACH,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;gBACpC,IAAI,CAAC,eAAe,GAAG,0CAA0C,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;aACzF;QAEL,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,MAAU;QACxB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACnE,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACvD,CAAC;IAED,iBAAiB;QACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QACvC,IAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;YAC1B,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAChF,GAAE,EAAE;gBACF,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACnC,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CACF;SACA;aAAI;YACH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SACzE;IAEH,CAAC;IAED,oBAAoB;QAClB,IAAG,SAAS,CAAC,MAAM,EAAC;YAClB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC3D,GAAE,EAAE;gBACF,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CACF,CAAC;SACD;aAAI;YACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,uCAAuC,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;SACtG;IACH,CAAC;IAED,oBAAoB;QAClB,IAAG,SAAS,CAAC,MAAM,EAAC;YAClB,IAAI,UAAU,GACd;gBACI,gBAAgB,EAAE,IAAI,CAAC,YAAY;gBACnC,YAAY,EAAE,IAAI,CAAC,gBAAgB;aACtC,CAAC;YACF,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,SAAS,CACtD,GAAE,EAAE;gBACF,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CACF;SACA;aAAI;YACH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,uCAAuC,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SACvG;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;;8FArIU,uBAAuB;qHAAvB,uBAAuB;QCXpC,yEAAoC;QAClC,sEAAK;QACH,yEAA0G;QACxG,yEAAiD;QAC/C,yEAA0F;QACxF,8DAAiI;QAAjI,yEAAiI;QAC/H,qEAAqO;QACvO,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,+DAAK;QAAL,sEAAK;QACH,wEAAiD;QAAA,sEAAW;QAAA,4DAAK;QACjE,wEAA8B;QAAA,wDAAuB;QAAA,4DAAI;QAC3D,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,uEAAK;QACH,0EAAgG;QAC9F,0EAAiD;QAC/C,0EAA+G;QAC7G,8DAAqJ;QAArJ,2EAAqJ;QACnJ,uEAAkM;QACpM,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,+DAAK;QAAL,uEAAK;QACH,yEAAiD;QAAA,sEAAU;QAAA,4DAAK;QAChE,wEAA8B;QAAA,wDAAqB;QAAA,4DAAI;QACzD,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,uEAAK;QACH,0EAAgG;QAC9F,0EAAiD;QAC/C,0EAA0F;QACxF,8DAAiI;QAAjI,0EAAiI;QAC/H,uEAAoN;QACtN,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,+DAAK;QAAL,uEAAK;QACH,yEAAiD;QAAA,0EAAc;QAAA,4DAAK;QACpE,2EAAqC;QAClC,8EAAiC;QAAzB,gJAAS,iBAAa,IAAC;QAC9B,2HAGM;QACN,2HAEM;QACP,4DAAS;QACZ,wEAAgG;QAChG,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,uEAAK;QACH,0EAAgG;QAC9F,0EAAiD;QAC/C,0EAA0F;QACxF,8DAAoI;QAApI,2EAAoI;QAClI,sEAAqO;QACvO,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,+DAAK;QAAL,uEAAK;QACH,yEAAiD;QAAA,uEAAW;QAAA,4DAAK;QAEjE,sHAOM;QAEN,sHAgBM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,uEAAK;QACH,0EAAgG;QAC9F,0EAAiD;QAC/C,0EAA0F;QACxF,8DAAiI;QAAjI,0EAAiI;QAC/H,uEAAgN;QAClN,4DAAM;QAER,4DAAM;QACR,4DAAM;QACN,+DAAK;QAAL,uEAAK;QACH,yEAAiD;QAAA,sEAAU;QAAA,4DAAK;QAChE,wEAA8B;QAAA,wDAAqB;QAAA,4DAAI;QACzD,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,uEAAK;QACH,2EAAiG;QAC/F,0EAAiD;QAC/C,0EAA0F;QACxF,8DAAiI;QAAjI,0EAAiI;QAC/H,uEAA2I;QAC7I,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,+DAAK;QAAL,uEAAK;QACH,yEAAiD;QAAA,mEAAO;QAAA,4DAAK;QAE7D,0EAAgC;QAC9B,4HAIO;QACT,4HAIS;QACR,wDACH;QAAA,4DAAM;QAEJ,0EAAgC;QAChC,4HAIS;QACT,4HAIS;QACT,wDACA;QAAA,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGR,4DAAM;;QAzJgC,2DAAuB;QAAvB,iGAAuB;QAgBvB,2DAAqB;QAArB,sFAAqB;QAkBN,2DAAmB;QAAnB,mFAAmB;QAItD,0DAAkB;QAAlB,kFAAkB;QAIpB,0DAAgC;QAAhC,sGAAgC;QAAC,0EAAiB;QAmBpB,2DAAgC;QAAhC,kGAAgC;QAShC,0DAA+B;QAA/B,iGAA+B;QAiCvC,2DAAqB;QAArB,+FAAqB;QAkBP,2DAA+B;QAA/B,gGAA+B;QAKjE,0DAA+B;QAA/B,gGAA+B;QAKxC,0DACH;QADG,4FACH;QAG4C,0DAAwC;QAAxC,wGAAwC;QAKxE,0DAAoC;QAApC,qGAAoC;QAK9C,0DACA;QADA,+FACA;;;;;;;;;;;;;;;;;;;;;ACxJD,MAAM,qBAAqB;IAOhC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALpC,qBAAgB,GAAC,qEAAqE,CAAC;QACvF,yBAAoB,GAAC,qEAAqE,CAAC;QAC3F,mBAAc,GAAC,+DAA+D,CAAC;QAC/E,kBAAa,GAAC,uCAAuC,CAAC;IAEd,CAAC;IAEzC,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC9C,CAAC;IAED,iBAAiB,CAAC,QAAY;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAC,QAAQ,CAAC,CAAC;IAC5D,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC5C,CAAC;IAED,SAAS,CAAC,UAAc;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAC,UAAU,CAAC,CAAC;IACvD,CAAC;;0FAtBU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ACHgD;AAOJ;AACP;;;;;;;;;AAQlD,MAAM,cAAc;IAUzB,YAAoB,MAAqB,EACrB,QAAsB,EACtB,IAAgB,EAChB,MAAc,EACd,KAAwB,EACxB,OAA0B,EAC3B,kBAAqC;QANpC,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAc;QACtB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAmB;QACxB,YAAO,GAAP,OAAO,CAAmB;QAC3B,uBAAkB,GAAlB,kBAAkB,CAAmB;QAbxD,iBAAY,GAAW,iDAA+B,CAAC;QACvD,kBAAa,GAAW,0CAA+B,CAAC;QAgExD,UAAK,GAAG,wBAAwB,CAAC;IAnDjC,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC/B,QAAQ,EAAG,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;YACxD,QAAQ,EAAG,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACvC,CAAC;IACJ,CAAC;IAED,WAAW;IACX,sCAAsC;IACtC,mDAAmD;IACnD,eAAe;IACf,0BAA0B;IAC1B,kBAAkB;IAClB,0BAA0B;IAC1B,MAAM;IACN,OAAO;IACP,IAAI;IAEJ,KAAK;QACH,IAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;YACtB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CACxD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC5C,0CAA0C;gBAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,SAAS,EAAC,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gBACpE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBAEpB,IAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC;oBACzH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,kCAAkC;oBAChF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,2CAA2C;oBACxH,IAAI,CAAC,QAAQ,GAAE,uDAAuD,GAAC,IAAI,CAAC,OAAO,GAAC,+BAA+B,GAAC,IAAI,CAAC,IAAI,GAAC,aAAa,CAAC;oBAC5I,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,gDAAgD,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;iBAC3H;YAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,SAAS,EAAC,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gBACpE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC,CACF,CAAC;SACH;IACH,CAAC;;4EAjEU,cAAc;4GAAd,cAAc;QCjB3B,yEAAoI;QAEhI,0EAA+I;QAAjH,sIAAU,WAAO,IAAC;QAC9C,yEAA0C;QACxC,oEAA8D;QAEhE,4DAAM;QACN,wEAA4C;QAAA,+EAAoB;QAAA,4DAAK;QAErE,sEAA2G;QAC3G,sEAA2G;QAC3G,4EAA8H;QAAA,gEAAK;QAAA,4DAAS;QAC9I,4DAAO;QAIT,4DAAM;QAEN,kFAAoH;QAAA,wEAAyB;QAAC,wEAAW;QAAA,4DAAI;QAAA,4DAAc;;QAhBnK,0DAAuB;QAAvB,oFAAuB;QAgB+D,0DAAqB;QAArB,4EAAqB;;;;;;;;;;;;;;;;;;;;;ACZ9G,MAAM,YAAY;IAGvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,QAAG,GAAC,gDAAgD,CAAC;IAEb,CAAC;IAEzC,YAAY,CAAC,IAAQ;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;IACvC,CAAC;;wEAPU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;ACEb,MAAM,WAAW;IAGtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,QAAG,GAAC,qCAAqC,CAAC;IAEF,CAAC;IAIzC,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;;sEATU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;ACJpB,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACXiB;;;;;;;IAc7C,iJAAkE;;;IAArD,gGAAoC;;;IAG/B,uDAAqB;;;IAArB,mFAAqB;;;IAX3C,+EAKC;IAED,mIAEgB;IAEd,+MAAuD;IACzD,4DAAY;;;;;IAVV,4EAAyB;IACzB,0EAAiB;IAIN,0DAA0B;IAA1B,6FAA0B;;AASpC,MAAM,WAAW;IACtB,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAG,CAAC;IAE5D,UAAU,CAAC,KAAS,IAAI,OAAO,KAAK,CAAC,SAAS,YAAY,sDAAW,CAAC,CAAC,CAAC;;sEAH7D,WAAW;yGAAX,WAAW;;;QAhBpB,mHAYY;;QAXQ,iGAA2B;;;;;;;;;;;;;;;;;;;;;;;ACPE;;;;;;;;;IAwB7C,0JAAkE;;;IAArD,gGAAoC;;;;IA+B/B,uDAAqB;;;IAArB,mFAAqB;;;;IA9C3C,+EASC;IAED,yEAAkE;IAElE,oEAA4E;IAC5E,2IAEgB;IAIhB,yEAAqB;IACrB,yEAAiB;IAChB,4EAAuG;IAA/F,iUAAuB;IAChC,mEACA;IAAA,4DAAS;IACT,mEACA;IAAA,4EAAiH;IAAzG,oWAAS,2CAAgC,IAAC;IAClD,8DAA+G;IAA/G,0EAA+G;IAC/G,uEAAiG;IACnG,4DAAM;IACN,4DAAS;IACP,4DAAM;IAIN,4DAAM;IAMN,4DAAM;IAKJ,0NAAuD;IACzD,4DAAY;;;;;IA3CV,4EAA0B;IAC1B,0EAAiB;IASN,0DAA0B;IAA1B,6FAA0B;;AAqCpC,MAAM,mBAAmB;IAC9B,YAAoB,IAAiB,EAC5B,kBAAsC,EACtC,iBAAoC;QAFzB,SAAI,GAAJ,IAAI,CAAa;QAC5B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,sBAAiB,GAAjB,iBAAiB,CAAmB;IACxC,CAAC;IAIN,aAAa;QACX,IAAG,SAAS,CAAC,MAAM,EAAC;YAClB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,CAC3B,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC7B,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CACA,CAAC;SACH;aAAI;YACH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,uCAAuC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SACxG;IAEH,CAAC;IAKD,UAAU,CAAC,KAAS,IAAI,OAAO,KAAK,CAAC,SAAS,YAAY,sDAAW,CAAC,CAAC,CAAC;;sFA3B7D,mBAAmB;iHAAnB,mBAAmB;;;QAnD5B,4HA+CY;;QA5CQ,kGAA4B;;;;;;;;;;;;;;;;;;;ACT7C,MAAM,iBAAiB;IAD9B;QAEE,WAAM,GAAU,EAAE,CAAC;KASpB;IAPC,IAAI,CAAC,SAAoC,EAAE,UAAe,EAAE;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,iBAAG,SAAS,IAAK,OAAO,EAAG,CAAC;IAC9C,CAAC;IAED,MAAM,CAAC,KAAU;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;IACrD,CAAC;;kFATU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB,mBADJ,MAAM;;;;;;;;;;;;;;;;;;ACCzB,MAAM,kBAAkB;IAD/B;QAEE,WAAM,GAAU,EAAE,CAAC;KASpB;IAPC,IAAI,CAAC,SAAoC,EAAE,UAAe,EAAE;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,iBAAG,SAAS,IAAK,OAAO,EAAG,CAAC;IAC9C,CAAC;IAED,MAAM,CAAC,KAAU;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;IACrD,CAAC;;oFATU,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB,mBADL,MAAM","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/server-settings/server-settings.component.ts","./src/app/home/server-settings/server-settings.component.html","./src/app/home/server-settings/serversettings.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.service.ts","./src/app/test.service.ts","./src/environments/environment.ts","./src/main.ts","./src/toast-alert.component.ts","./src/toast-updateversion.component.ts","./src/toastAlert.services.ts","./src/toastUpdate.services.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'home', loadChildren: ()=>import('./home/home.module').then(m => m.HomeModule),\r\n  },\r\n  {\r\n    path: 'login', component: LoginComponent\r\n  },\r\n  {\r\n    path: '**', redirectTo: \"login\"\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TestService } from './test.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  \r\n  // formInfo = new FormGroup({\r\n  //   servername: new FormControl('',[]),\r\n  //   username:new FormControl('',[]),\r\n  //   password: new FormControl('',[])\r\n  // });\r\n\r\n  constructor(private test: TestService, private form:FormBuilder, private router: Router){\r\n\r\n  }\r\n\r\n  public formLogin! : FormGroup;\r\n\r\n  ngOnInit():void{\r\n    this.formLogin = this.form.group({\r\n      email : ['', [Validators.required, Validators.email]],\r\n      password : ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  // save() {\r\n  //   console.log(this.formInfo.value);\r\n  //   this.test.post(this.formInfo.value).subscribe(\r\n  //     res => {\r\n  //       console.log(res);\r\n  //   }, (err) => {\r\n  //       console.log(err);\r\n  //   }\r\n  //   );\r\n  // }\r\n\r\n  login(){\r\n    if(this.formLogin.valid){\r\n      this.router.navigate(['home']);\r\n    }\r\n  }\r\n\r\n\r\n  title = 'testingCreateddatabase';\r\n}","<!-- CSS only -->\r\n<!-- <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n<div class=\"container\">\r\n  &nbsp;\r\n\r\n  <form [formGroup]=\"formInfo\">\r\n  <div class=\"form-group\">\r\n    <label >servername</label>\r\n    <input formControlName=\"servername\" >\r\n    <br>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label >username</label>\r\n    <input formControlName=\"username\">\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label >Password</label>\r\n    <input formControlName=\"password\" >\r\n  </div>\r\n <br>\r\n  <button  class=\"btn btn-primary\" (click)=\"save()\">Submit</button>\r\n</form>\r\n\r\n</div> -->\r\n<app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n<app-toasts-alert aria-live=\"polite\" aria-atomic=\"true\"></app-toasts-alert>\r\n<router-outlet></router-outlet>\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule , CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastsUpdateVersion } from 'src/toast-updateversion.component';\r\nimport { ToastsAlert } from 'src/toast-alert.component';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { ServerSettingsComponent } from './home/server-settings/server-settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ServerSettingsComponent,\r\n  \r\n    ToastsUpdateVersion,\r\n    ToastsAlert,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    BrowserAnimationsModule,\r\n    FontAwesomeModule\r\n  ],\r\n  providers: [CookieService],\r\n  bootstrap: [AppComponent],\r\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServersettingsService } from './serversettings.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport * as versionsCloud from './../../../../versionsaedpay.json'; \r\nimport { ToastServiceAlert } from 'src/toastAlert.services';\r\n\r\n@Component({\r\n  selector: 'app-server-settings',\r\n  templateUrl: './server-settings.component.html',\r\n  styleUrls: ['./server-settings.component.scss']\r\n})\r\nexport class ServerSettingsComponent implements OnInit {\r\n  updatedApp:string='';\r\n  msgUpdateApp:string='';\r\n  updateConfig:string='';\r\n  msgUpdateConfig:string='';\r\n  newVersionApp:string='';\r\n  newVersionConfig:string='';\r\n\r\n  details:any;\r\n  showEditServerAlias:boolean = false;\r\n  show: boolean = false;\r\n  versionCloud:  any  = (versionsCloud  as  any).default;\r\n\r\n  serverAliasForm =new FormGroup({\r\n    serverAliasInput:new FormControl('',[Validators.required]),\r\n  });\r\n\r\n  constructor(private SvcServerSettings: ServersettingsService,\r\n    private toastAlertService:ToastServiceAlert) { }\r\n\r\n  ngOnInit(): void {\r\n   this.getdata();\r\n  }\r\n\r\n  getdata(){\r\n     this.SvcServerSettings.getDetailsServer().subscribe(\r\n      (data:any)=>{\r\n        this.details = data[0]\r\n        console.log(this.details)\r\n      }, error =>{\r\n        console.log(error)\r\n      }\r\n    );\r\n\r\n    this.SvcServerSettings.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        //verificacion de actualizacinoes del aedpay\r\n        if(parseFloat(this.versionCloud[this.versionCloud.length-1].appAngularVersion) > data[0].appAngular ){\r\n          if(parseFloat(this.versionCloud[this.versionCloud.length-1].appLaravelVersion) > data[0].appLaravel){\r\n            this.updatedApp = 'updateBoth';\r\n            this.newVersionApp = this.versionCloud[this.versionCloud.length-1].appAngularVersion;\r\n            this.msgUpdateApp = 'aedpay has a new version. You currently have version '+data[0].appAngular+'. Do you want to get version '+this.versionCloud[this.versionCloud.length-1].appAngularVersion+' right now?';\r\n            }else{\r\n              this.newVersionApp = this.versionCloud[this.versionCloud.length-1].appAngularVersion;\r\n              this.updatedApp = 'updateOnlyAngular';\r\n              this.msgUpdateApp = 'aedpay has a new version. You currently have version '+data[0].appAngular+'. Do you want to get version '+this.versionCloud[this.versionCloud.length-1].appAngularVersion+' right now?';\r\n            }\r\n        }else{\r\n          if(parseFloat(this.versionCloud[this.versionCloud.length-1].appLaravelVersion) > data[0].appLaravel){\r\n            this.newVersionApp = this.versionCloud[this.versionCloud.length-1].appAngularVersion;\r\n            this.updatedApp = 'updateOnlyLaravel';\r\n            this.msgUpdateApp = 'aedpay has a new version. You currently have version '+data[0].appAngular+'. Do you want to get version '+this.versionCloud[this.versionCloud.length-1].appAngularVersion+' right now?';\r\n            }else{\r\n              this.updatedApp = 'AppUpdated';\r\n              this.msgUpdateApp = 'aedpay updated to the latest version '+data[0].appAngular;\r\n            }\r\n        }\r\n\r\n\r\n          if(parseFloat(this.versionCloud[this.versionCloud.length-1].configAngularVersion) > data[0].configAngular){\r\n            this.newVersionConfig = this.versionCloud[this.versionCloud.length-1].configAngularVersion;\r\n            this.updateConfig = 'updateOnlyConfig';\r\n            this.msgUpdateConfig = 'aedpay has a new AppConfig version. You currently have version '+data[0].configAngular+'. Do you want to get version '+this.versionCloud[this.versionCloud.length-1].configAngularVersion+' right now?';\r\n\r\n          }else{\r\n            this.updateConfig = 'ConfigUpdated';\r\n            this.msgUpdateConfig = 'appConfig updated to the latest version '+data[0].configAngular;\r\n          }\r\n\r\n      }, error =>{\r\n        console.log(error)\r\n      }\r\n    );\r\n  }\r\n\r\n  editserverAlias(server:any){\r\n    this.serverAliasForm.controls['serverAliasInput'].setValue(server);\r\n    this.showEditServerAlias = !this.showEditServerAlias;\r\n  }\r\n\r\n  updateServerAlias(){\r\n    console.log(this.serverAliasForm.value)\r\n    if(this.serverAliasForm.valid){\r\n        this.SvcServerSettings.updateServerAlias(this.serverAliasForm.value).subscribe(\r\n      ()=>{\r\n        this.getdata();\r\n        this.showEditServerAlias = false;\r\n      }, error =>{\r\n        console.log(error)\r\n      }\r\n    )\r\n    }else{\r\n      this.toastAlertService.show(\"Required\", { classname: ' ', delay: 2000 })\r\n    }\r\n  \r\n  }\r\n\r\n  clickUpdateAppAedPay(){\r\n    if(navigator.onLine){\r\n      this.SvcServerSettings.updateApp(this.updatedApp).subscribe(\r\n      ()=>{\r\n        this.getdata();\r\n      }, error =>{\r\n        console.log(error)\r\n      }\r\n    );\r\n    }else{ \r\n    this.toastAlertService.show(\"You are not connected to the internet\", { classname: ' ', delay: 20000 });     \r\n    }    \r\n  }\r\n\r\n  clickUpdateAppConfig(){    \r\n    if(navigator.onLine){\r\n      var jsonUpdate = \r\n      {\r\n          \"typeRepository\": this.updateConfig,\r\n          \"newVersion\": this.newVersionConfig \r\n      };\r\n      this.SvcServerSettings.updateApp(jsonUpdate).subscribe(\r\n      ()=>{\r\n        this.getdata();\r\n      }, error =>{\r\n        console.log(error)\r\n      }\r\n    )\r\n    }else{\r\n      this.toastAlertService.show(\"You are not connected to the internet\", { classname: ' ', delay: 2000 });     \r\n    }   \r\n  }\r\n\r\n  seepassword():void{\r\n    this.show = !this.show;\r\n  } \r\n\r\n}\r\n","<div class=\"grid grid-cols-3 gap-4\">\r\n  <div>\r\n    <div class=\"max-w-md py-2 px-4 bg-white shadow-sm border-2 border-gray-50 border-2  rounded-lg my-3 mx-3\">\r\n      <div class=\"flex justify-center md:justify-end \">\r\n        <div class=\"w-11 h-11 p-1 object-cover rounded-full border-2 border-blue-500 bg-blue-500\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8 p-0 m-0 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 class=\"text-gray-800 text-3xl font-semibold\">Server Name</h2>\r\n        <p class=\"mt-2 text-gray-600\">{{details.serverName}} </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <div class=\"max-w-md py-2 px-4 bg-white shadow-sm border-2 border-gray-50 rounded-lg my-3 mx-3\">\r\n      <div class=\"flex justify-center md:justify-end \">\r\n        <div class=\"w-11 h-11 p-1 object-cover rounded-full border-2 border-blue-500 bg-blue-500 transform rotate-45 \">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8 p-0 m-0 text-white transform rotate-90\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 class=\"text-gray-800 text-3xl font-semibold\">AnyDesk Id</h2>\r\n        <p class=\"mt-2 text-gray-600\">{{details.anyDeskId}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <div class=\"max-w-md py-2 px-4 bg-white shadow-sm border-2 border-gray-50 rounded-lg my-3 mx-3\">\r\n      <div class=\"flex justify-center md:justify-end \">\r\n        <div class=\"w-11 h-11 p-1 object-cover rounded-full border-2 border-blue-500 bg-blue-500\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8 p-0 m-0 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 class=\"text-gray-800 text-3xl font-semibold\">Wi-Fi Password</h2>\r\n        <div class=\"mt-2 text-gray-600 mb-3\">\r\n           <button (click)=\"seepassword()\" > \r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"show == false\" class=\"h-3 w-3 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n            </svg>\r\n            <svg *ngIf=\"show == true\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\r\n            </svg>          \r\n           </button>\r\n        <input  value=\"{{details.wifiPassword}}\" [readOnly]=\"true\" [type]=\"show ? 'text' : 'password'\" >\r\n        </div>\r\n       \r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <div class=\"max-w-md py-2 px-4 bg-white shadow-sm border-2 border-gray-50 rounded-lg my-3 mx-3\">\r\n      <div class=\"flex justify-center md:justify-end \">\r\n        <div class=\"w-11 h-11 p-1 object-cover rounded-full border-2 border-blue-500 bg-blue-500\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8 p-0 m-0 text-gray-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 class=\"text-gray-800 text-3xl font-semibold\">ServerAlias</h2>\r\n      \r\n        <div class=\"mt-2 text-gray-600 mb-3\" *ngIf=\"showEditServerAlias==false\"> \r\n          <button (click)=editserverAlias(details.serverAlias)>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\r\n            </svg>\r\n          </button>\r\n          {{details.serverAlias}} \r\n        </div>\r\n\r\n        <div class=\"mt-2 text-gray-600 mb-3\" *ngIf=\"showEditServerAlias==true\"> \r\n        <form [formGroup]=\"serverAliasForm\" >\r\n          <button (click)=updateServerAlias()>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\" />\r\n            </svg>\r\n          </button>\r\n          <button (click)=editserverAlias(details.serverAlias)>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n         \r\n          <input minlength=\"2\" maxlength=\"50\" formControlName=\"serverAliasInput\" type=\"text\" placeholder=\"Please Complete this information\" > \r\n        </form>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <div class=\"max-w-md py-2 px-4 bg-white shadow-sm border-2 border-gray-50 rounded-lg my-3 mx-3\">\r\n      <div class=\"flex justify-center md:justify-end \">\r\n        <div class=\"w-11 h-11 p-1 object-cover rounded-full border-2 border-blue-500 bg-blue-500\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8 p-0 m-0 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\r\n          </svg>\r\n         \r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 class=\"text-gray-800 text-3xl font-semibold\">Ip Address</h2>\r\n        <p class=\"mt-2 text-gray-600\">{{details.ipAdress}} </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <div class=\"max-w-md py-2 px-4 bg-white shadow-sm border-2 border-gray-100 rounded-lg my-3 mx-3\">\r\n      <div class=\"flex justify-center md:justify-end \">\r\n        <div class=\"w-11 h-11 p-1 object-cover rounded-full border-2 border-blue-500 bg-blue-500\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8 p-0 m-0 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\r\n          </svg>         \r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 class=\"text-gray-800 text-3xl font-semibold\">Updates</h2>\r\n       \r\n        <div class=\"mt-2 text-gray-600\"> \r\n          <button (click)=\"clickUpdateAppAedPay()\" *ngIf=\"updatedApp !='AppUpdated'\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\r\n          </svg> \r\n        </button>\r\n        <button  *ngIf=\"updatedApp =='AppUpdated'\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\r\n          </svg>\r\n        </button>\r\n         {{msgUpdateApp}}\r\n      </div>\r\n        \r\n        <div class=\"mt-2 text-gray-600\">\r\n        <button (click)=\"clickUpdateAppConfig()\" *ngIf=\"updateConfig == 'updateOnlyConfig'\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\r\n          </svg> \r\n        </button>\r\n        <button  *ngIf=\"updateConfig =='ConfigUpdated'\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\r\n          </svg>\r\n        </button>\r\n        {{msgUpdateConfig}} \r\n        </div>\r\n       \r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServersettingsService {\r\n\r\n  urlGetServerSett='http://localhost/Appconfig/php/serverSettings/getServerSettings.php';\r\n  urlUpdateserverAlias='http://localhost/Appconfig/php/serverSettings/updateServerAlias.php';\r\n  urlGetVersions='http://localhost/Appconfig/php/serverSettings/getVersions.php';\r\n  urlUpdateApps='http://localhost/UpdateAppsGitHub.php';\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDetailsServer() {\r\n    return this.http.get(this.urlGetServerSett);    \r\n  }\r\n\r\n  updateServerAlias(newAlias:any) {\r\n    return this.http.post(this.urlUpdateserverAlias,newAlias);    \r\n  }\r\n  getVersions() {\r\n    return this.http.get(this.urlGetVersions);    \r\n  }\r\n\r\n  updateApp(typeUpdate:any){\r\n    return this.http.post(this.urlUpdateApps,typeUpdate);  \r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ToastServiceAlert } from 'src/toastAlert.services';\r\nimport { TestService } from '../test.service';\r\nimport { LoginService } from './login.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport * as versionsCloud from './../../../versionsaedpay.json'; \r\nimport * as versionActual from './../../../version.json';\r\nimport { ToastServiceUpdate } from 'src/toastUpdate.services';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  \r\n \r\n  versionCloud:  any  = (versionsCloud  as  any).default;\r\n  versionActual:  any  = (versionActual  as  any).default;\r\n  actualV:any;\r\n  newV:any;\r\n  msgToast:any;\r\n  events:any;\r\n\r\n  constructor(private Cookie: CookieService, \r\n              private SvcLogin: LoginService, \r\n              private form:FormBuilder, \r\n              private router: Router, \r\n              private alert: ToastServiceAlert,\r\n              private loading: NgxSpinnerService,\r\n              public toastUpdateService:ToastServiceUpdate){\r\n  }\r\n\r\n  public formLogin! : FormGroup;\r\n\r\n  ngOnInit():void{\r\n    this.formLogin = this.form.group({\r\n      username : ['', [Validators.required, Validators.email]],\r\n      password : ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  // save() {\r\n  //   console.log(this.formInfo.value);\r\n  //   this.test.post(this.formInfo.value).subscribe(\r\n  //     res => {\r\n  //       console.log(res);\r\n  //   }, (err) => {\r\n  //       console.log(err);\r\n  //   }\r\n  //   );\r\n  // }\r\n\r\n  login(){\r\n    if(this.formLogin.valid){\r\n      this.loading.show();\r\n      this.SvcLogin.execphpLogin(this.formLogin.value).subscribe(\r\n        res => {\r\n          console.log(res);\r\n          this.Cookie.set('dbServer', res.toString());\r\n          //console.log(this.Cookie.get('dbServer'))\r\n          this.router.navigate(['home/serverSettings'])\r\n          this.alert.show('Welcome', { classname:'text-light', delay: 5000 });     \r\n          this.loading.hide();  \r\n\r\n          if(parseFloat(this.versionCloud[this.versionCloud.length-1].appAngularVersion) > parseFloat(this.versionActual[0].version)){\r\n            this.actualV = this.versionActual[0].version; //la version dentro del json local\r\n            this.newV = this.versionCloud[this.versionCloud.length-1].appAngularVersion; //consuminedo la API de versiones de aedpay\r\n            this.msgToast ='aedpay has a new version. You currently have version '+this.actualV+'. Do you want to get version '+this.newV+' right now?';   \r\n            this.toastUpdateService.show(this.msgToast, { classname: ' text-light fixed  left-0  bottom-0 h-16 mb-2 ', delay: 20000 }); \r\n           }\r\n                              \r\n      }, (err) => {\r\n          console.log(err);\r\n          this.alert.show('invalid', { classname:'text-light', delay: 5000 });\r\n          this.loading.hide();             \r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  title = 'testingCreateddatabase';\r\n}\r\n","<div  class=\"flex min-h-screen justify-center items-center text-center\" style=\"background-image: url('assets/img/background.jpg');\">\n\n    <form [formGroup]=\"formLogin\" (submit)=\"login()\"  class=\"flex flex-col bg-white rounded-xl border-2 border-blue-400 space-y-5 w-96 px-5 py-10\">\n      <div class=\"t-flex t-justify-end t-pr-10\">\n        <img  class=\"img-responsive\" src=\"assets/img/aedpaylogo2.png\">\n  \n      </div>\n      <h1 class=\"font-bold text-xl text-gray-600\">AEDPAY Configuration</h1>\n  \n      <input formControlName=\"username\" class=\"border-2 rounded-xl px-2 py-2\" type=\"text\" placeholder=\"Username\">\n      <input formControlName=\"password\" class=\"border-2 rounded-xl px-2 py-2\" type=\"text\" placeholder=\"Password\">\n      <button type=\"submit\" class=\"transition ease-in-out rounded-xl px-2 py-2 bg-blue-400 text-white font-bold hover:bg-blue-500\" >Login</button>\n    </form>\n    <!-- <div>\n        {{formLogin.value | json}}\n    </div> -->\n  </div>\n\n  <ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#fff\" type = \"ball-spin\" [fullScreen] = \"true\"><p style=\"color: white\" > Setting Up </p></ngx-spinner>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  url='http://localhost/Appconfig/php/login/login.php';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  execphpLogin(data:any) {\r\n    return this.http.post(this.url,data);    \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestService {\r\n  url='http://localhost/UpdatesAngular.php';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n\r\n  execphp() {\r\n    return this.http.get(this.url);    \r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import {Component, TemplateRef} from '@angular/core';\r\nimport { ToastServiceAlert } from './toastAlert.services';\r\n\r\n@Component({\r\n  selector: 'app-toasts-alert',\r\n  template: `\r\n    <ngb-toast  \r\n      *ngFor=\"let toast of toastServiceAlert.toasts\"\r\n      [class]=\"toast.classname\"\r\n      [autohide]=\"true\"\r\n      [delay]=\"toast.delay || 5000\"    \r\n    >\r\n\r\n    <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\" >\r\n        <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\" > </ng-template>\r\n      </ng-template> \r\n\r\n      <ng-template #text >{{ toast.textOrTpl }}</ng-template>\r\n    </ngb-toast>\r\n  `,\r\n  host: {'[class.ngb-toasts]': 'true'}\r\n})\r\nexport class ToastsAlert {\r\n  constructor( public toastServiceAlert: ToastServiceAlert) {}  \r\n\r\n  isTemplate(toast:any) { return toast.textOrTpl instanceof TemplateRef; }\r\n}","import {Component, TemplateRef} from '@angular/core';\r\nimport { ToastServiceUpdate } from './toastUpdate.services';\r\nimport { TestService } from 'src/app/test.service';\r\nimport { ToastServiceAlert } from './toastAlert.services';\r\n\r\n\r\n@Component({\r\n  selector: 'app-toasts',\r\n  template: `\r\n    <ngb-toast\r\n\r\n    style=\"background-color:#000; width:100%;opacity: 0.90;\"\r\n      *ngFor=\"let toast of toastServiceUpdate.toasts\"\r\n      [class]=\"toast.classname \"\r\n      [autohide]=\"true\"\r\n      [delay]=\"toast.delay || 20000\"\r\n      \r\n      \r\n    >\r\n    \r\n    <div class=\"flex justify-between w-full  items-center  absolute \">\r\n\r\n    <img  style=\"width:120px;heigth:80px\" src=\"assets/img/aedpay_whitelogo.png\">\r\n    <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\" >\r\n        <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\" > </ng-template>\r\n      </ng-template> \r\n\r\n    \r\n\r\n    <div class=\" pr-10\" >\r\n    <div class=\"row\">\r\n     <button (click)=updateVersion() class=\"w-auto h-10 px-3 text-black bg-white  rounded-sm outline-none \">\r\n    Update\r\n    </button>\r\n    &nbsp;\r\n    <button (click)=\"toastServiceUpdate.remove(toast)\" class=\"w-auto h-10 mx-3 text-white  rounded-sm outline-none \">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 \" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n  </svg>\r\n  </button>\r\n    </div>\r\n   \r\n    \r\n    \r\n    </div>\r\n\r\n    \r\n    \r\n      \r\n \r\n    </div>\r\n\r\n\r\n\r\n\r\n      <ng-template #text >{{ toast.textOrTpl }}</ng-template>\r\n    </ngb-toast>\r\n  `,\r\n  host: {'[class.ngb-toasts]': 'true'}\r\n})\r\nexport class ToastsUpdateVersion {\r\n  constructor(private test: TestService, \r\n    public toastServiceUpdate: ToastServiceUpdate,\r\n    public toastAlertService: ToastServiceAlert\r\n    ) {}\r\n\r\n  \r\n\r\n  updateVersion(){\r\n    if(navigator.onLine){\r\n      this.test.execphp().subscribe(\r\n        res => {\r\n          console.log(res);\r\n          window.location.reload();\r\n      }, (err) => {\r\n          console.log(err);\r\n      }\r\n      );\r\n    }else{\r\n      this.toastAlertService.show(\"You are not connected to the internet\", { classname: '  ', delay: 2000 });  \r\n    }\r\n    \r\n  }\r\n\r\n\r\n  \r\n\r\n  isTemplate(toast:any) { return toast.textOrTpl instanceof TemplateRef; }\r\n}","import { Injectable, TemplateRef } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastServiceAlert {\r\n  toasts: any[] = [];\r\n\r\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.toasts.push({ textOrTpl, ...options });\r\n  }\r\n\r\n  remove(toast: any) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n}","import { Injectable, TemplateRef } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastServiceUpdate {\r\n  toasts: any[] = [];\r\n\r\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.toasts.push({ textOrTpl, ...options });\r\n  }\r\n\r\n  remove(toast: any) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n}"],"names":[],"sourceRoot":"webpack:///"}